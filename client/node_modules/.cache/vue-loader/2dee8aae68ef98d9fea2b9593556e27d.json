{"remainingRequest":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/src/components/ListeDesRestaurants.vue?vue&type=style&index=0&id=212a514b&scoped=true&lang=css&","dependencies":[{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/src/components/ListeDesRestaurants.vue","mtime":1636054397892},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMyB7CiAgbWFyZ2luOiA0MHB4IDAgMDsKfQp1bCB7CiAgbGlzdC1zdHlsZS10eXBlOiBub25lOwogIHBhZGRpbmc6IDA7Cn0KbGkgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDAgMTBweDsKfQphIHsKICBjb2xvcjogIzQyYjk4MzsKfQoKI2xpc3RlUmVzdGF1cmFudHN7CiAgICB3aWR0aDogODAlOwogICAgbWFyZ2luOiBhdXRvOwp9CgojYWpvdXQgewogICAgbWFyZ2luOiAyJTsKfQoKI25leHQgewogICAgbWFyZ2luOiAyJTsKfQoKCkBpbXBvcnQgdXJsKCIvL3VucGtnLmNvbS9lbGVtZW50LXVpQDIuMTUuNi9saWIvdGhlbWUtY2hhbGsvaW5kZXguY3NzIik7Cg=="},{"version":3,"sources":["ListeDesRestaurants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA","file":"ListeDesRestaurants.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"restaurants\">\n    \n\n    <div class=\"md-layout\">\n        <div class=\"md-layout-item\">\n            <p id=\"titre\">Nombre de restaurants : {{nbRestaurantsTotal}}</p>\n        </div>\n        <div class=\"md-layout-item\">\n        </div>\n        <div class=\"md-layout-item\">\n            <p>Rechercher <input @input=\"chercherRestaurants\" type=\"texte\" v-model=\"nomRechercher\"></p>\n        </div>\n      </div>\n\n      <div id=\"ajout\">\n          <p>Ajouter un restaurant</p>\n        <form v-on:submit.prevent=\"ajouterRestaurant\">\n            <label>\n                Nom : <input name=\"nom\" type=\"text\" required v-model=\"name\">\n            </label>\n            <label>\n                Cuisine : <input name=\"cuisine\" type=\"text\" required v-model=\"cuisine\">\n            </label>\n\n            <button>Ajouter</button>\n        </form>\n      </div>\n      \n\n    <div id=\"listeRestaurants\">\n        <md-table v-model=\"restaurants\" md-sort=\"nom\" md-sort-order=\"asc\" md-card>\n        <!--v-on:click=\"supprimerRestaurant(item)\"-->\n            <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\" @click=\"$router.push('/RestaurantDetails/' + item._id)\">\n                <md-table-cell md-label=\"Nom\" md-sort-by=\"name\">{{ item.name }}</md-table-cell>\n                <md-table-cell md-label=\"Cuisine\">{{ item.cuisine }}</md-table-cell>\n                <md-table-cell md-label=\"Note\" md-sort-by=\"note\"><i class=\"el-icon-star-on\" v-for=\"note in item.element.grades[0].score\" :key=\"note\"></i></md-table-cell>\n                <md-table-cell><img src=\"../assets/heart-icon.png\" alt=\"LIKED\" width=\"10px\" v-if=\"isFavoris(item._id)\"></md-table-cell>\n                <md-table-cell> <i class=\"el-icon-delete\" @click=\"supprimerRestaurant(item)\" @click.stop.prevent></i></md-table-cell>\n            </md-table-row>\n        </md-table>\n\n        <div id=\"next\">\n            <md-button :disabled=\"page===0\" @click=\"pagePrecedente()\" class=\"md-accent\">Précédent</md-button>\n            <md-button :disabled=\"page===nbPageTotal\" @click=\"pageSuivante()\" class=\"md-primary\">Suivant</md-button>\n            <div class=\"slidecontainer\">\n                <input @change=\"getRestaurantsFromServer()\" type=\"range\" min=\"5\" max=\"100\" v-model=\"pageSize\" step=\"5\" class=\"slider\" id=\"myRange\">{{pageSize}}\n            </div>\n        </div>\n        \n\n    </div>\n    \n\n  </div>\n\n  \n    \n\n</template>\n\n<script>\nimport _ from \"lodash\"\nexport default {\n  name: 'ListeDesRestaurants',\n  data: function () {\n        return{\n            restaurants: [],\n            name: '',\n            cuisine: '',\n            nbRestaurantsTotal: '',\n            page : 0,\n            pageSize : 10,\n            nbPageTotal : 0,\n            nomRechercher: '',\n            active: false,\n            value: null\n        }},\n    mounted() {\n        this.getRestaurantsFromServer();\n    },\n    methods: {\n        supprimerRestaurant(r) {\n            let url = \"http://localhost:8080/api/restaurants/\" + r._id ;\n\n            fetch(url, {\n                method: \"DELETE\",\n            })\n            .then((responseJSON) => {\n                responseJSON.json()\n                    .then((res) => {\n                        // Maintenant res est un vrai objet JavaScript\n                        console.log(res);\n                        this.getRestaurantsFromServer();\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err)\n            });\n        },\n        ajouterRestaurant(event) {\n            // eviter le comportement par defaut\n        \n            let form = event.target;\n\n            // Récupération des valeurs des champs du formulaire\n            // en prévision d'un envoi multipart en ajax/fetch\n            let donneesFormulaire = new FormData(form);\n\n            let url = \"http://localhost:8080/api/restaurants\";\n\n            fetch(url, {\n                method: \"POST\",\n                body: donneesFormulaire\n            })\n            .then((responseJSON) => {\n                responseJSON.json()\n                    .then((res) => {\n                        // Maintenant res est un vrai objet JavaScript\n                        console.log(res);\n                        this.getRestaurantsFromServer();\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err);\n            });\n            this.name = \"\";\n            this.cuisine = \"\";\n        },\n        getColor(index) {\n            return (index % 2) ? 'lightBlue' : 'pink';\n        },\n        getRestaurantsFromServer() {\n            let url = 'http://localhost:8080/api/restaurants?';\n            url += 'page=' + this.page;\n            url += '&pagesize=' + this.pageSize;\n            url += '&name=' + this.nomRechercher;\n\n            fetch(url, {\n                method: 'get'\n            }).then((response) => {\n                response.json().then((res) => {\n                    this.restaurants = res.data;\n                    this.nbRestaurantsTotal = res.count;\n                    this.nbPageTotal = Math.round(this.nbRestaurantsTotal/this.pageSize);\n                    this.restaurants.forEach(element => {\n                        element.grades[0].score = Math.floor((element.grades[0].score * 5)/20)\n                    });\n                });\n            }).catch(function(err) {\n                console.log(err);\n            });\n        },\n        pagePrecedente() {\n            if (this.page === 0) return;\n\n            this.page--;\n            this.getRestaurantsFromServer();\n            \n            \n        },\n        pageSuivante() {\n            if (this.page === this.nbPageTotal) return;\n            this.page++;\n            this.getRestaurantsFromServer();\n        },\n        changePageSize(size) {\n            this.pageSize = size ;\n            this.getRestaurantsFromServer();\n        },\n        onConfirm () {\n        this.value = 'Agreed'\n      },\n      isFavoris(id) {\n        if(localStorage.getItem(\"favoris\")){\n            let favoris = JSON.parse(localStorage.getItem(\"favoris\"));\n            return favoris.indexOf(id) >= 0;\n        }\n        return false;\n    },\n        chercherRestaurants:  _.debounce(function(){this.getRestaurantsFromServer();},300)\n        \n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n#listeRestaurants{\n    width: 80%;\n    margin: auto;\n}\n\n#ajout {\n    margin: 2%;\n}\n\n#next {\n    margin: 2%;\n}\n\n\n@import url(\"//unpkg.com/element-ui@2.15.6/lib/theme-chalk/index.css\");\n</style>\n"]}]}