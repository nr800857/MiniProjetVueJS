{"remainingRequest":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/src/components/ListeDesRestaurants.vue?vue&type=style&index=0&id=212a514b&scoped=true&lang=css&","dependencies":[{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/src/components/ListeDesRestaurants.vue","mtime":1632909391910},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/remynguyen/Documents/MIAGE/M1/Javascript/TP3/tp3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["ListeDesRestaurants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListeDesRestaurants.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"restaurants\">\n    <h1 id=\"titre\">Nombre de restaurants : {{nbRestaurantsTotal}}</h1>\n    <form v-on:submit.prevent=\"ajouterRestaurant\">\n        <label>\n            Nom : <input name=\"nom\" type=\"text\" required v-model=\"name\">\n        </label>\n        <label>\n            Cuisine : <input name=\"cuisine\" type=\"text\" required v-model=\"cuisine\">\n        </label>\n\n        <button>Ajouter</button>\n    </form>\n    \n    <p>Rechercher <input @input=\"chercherRestaurants\" type=\"texte\" v-model=\"nomRechercher\"></p>\n    <table>\n        <tr>\n            <th>Nom</th>\n            <th>Cuisine </th>\n        </tr>\n        <tbody>\n            <tr \n                v-for=\"(r,index) in restaurants\" \n                :key = \"index\"\n                v-on:click=\"supprimerRestaurant(r)\" \n                v-bind:style=\"{backgroundColor:getColor(index)}\"\n                v-bind:class=\"{bordureRouge:(index === 2)}\"\n            >\n                <td>{{r.name}}</td>\n                <td> {{r.cuisine}}</td>\n                <td> {{r._id}}</td>\n            </tr>\n        </tbody>\n    </table>\n    <button :disabled=\"page===0\" @click=\"pagePrecedente()\">Précédent</button>\n    <button :disabled=\"page===nbPageTotal\" @click=\"pageSuivante()\">Suivant</button>\n    <div class=\"slidecontainer\">\n        <input @change=\"getRestaurantsFromServer()\" type=\"range\" min=\"5\" max=\"100\" v-model=\"pageSize\" step=\"5\" class=\"slider\" id=\"myRange\">{{pageSize}}\n      </div>\n  </div>\n</template>\n\n<script>\nimport _ from \"lodash\"\nexport default {\n  name: 'ListeDesRestaurants',\n  data: function () {\n        return{\n            restaurants: [],\n            name: '',\n            cuisine: '',\n            nbRestaurantsTotal: '',\n            page : 0,\n            pageSize : 10,\n            nbPageTotal : 0,\n            nomRechercher: ''\n        }},\n    mounted() {\n        this.getRestaurantsFromServer();\n    },\n    methods: {\n        supprimerRestaurant(r) {\n            let url = \"http://localhost:8080/api/restaurants/\" + r._id ;\n\n            fetch(url, {\n                method: \"DELETE\",\n            })\n            .then((responseJSON) => {\n                responseJSON.json()\n                    .then((res) => {\n                        // Maintenant res est un vrai objet JavaScript\n                        console.log(res);\n                        this.getRestaurantsFromServer();\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err)\n            });\n        },\n        ajouterRestaurant(event) {\n            // eviter le comportement par defaut\n        \n            let form = event.target;\n\n            // Récupération des valeurs des champs du formulaire\n            // en prévision d'un envoi multipart en ajax/fetch\n            let donneesFormulaire = new FormData(form);\n\n            let url = \"http://localhost:8080/api/restaurants\";\n\n            fetch(url, {\n                method: \"POST\",\n                body: donneesFormulaire\n            })\n            .then((responseJSON) => {\n                responseJSON.json()\n                    .then((res) => {\n                        // Maintenant res est un vrai objet JavaScript\n                        console.log(res);\n                        this.getRestaurantsFromServer();\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err);\n            });\n            this.name = \"\";\n            this.cuisine = \"\";\n        },\n        getColor(index) {\n            return (index % 2) ? 'lightBlue' : 'pink';\n        },\n        getRestaurantsFromServer() {\n            let url = 'http://localhost:8080/api/restaurants?';\n            url += 'page=' + this.page;\n            url += '&pagesize=' + this.pageSize;\n            url += '&name=' + this.nomRechercher;\n\n            fetch(url, {\n                method: 'get'\n            }).then((response) => {\n                response.json().then((res) => {\n                    this.restaurants = res.data;\n                    this.nbRestaurantsTotal = res.count;\n                    this.nbPageTotal = Math.round(this.nbRestaurantsTotal/this.pageSize);\n                });\n            }).catch(function(err) {\n                console.log(err);\n            });\n        },\n        pagePrecedente() {\n            if (this.page === 0) return;\n\n            this.page--;\n            this.getRestaurantsFromServer();\n            \n            \n        },\n        pageSuivante() {\n            if (this.page === this.nbPageTotal) return;\n            this.page++;\n            this.getRestaurantsFromServer();\n        },\n        changePageSize(size) {\n            this.pageSize = size ;\n            this.getRestaurantsFromServer();\n        },\n        chercherRestaurants:  _.debounce(function(){this.getRestaurantsFromServer();},300)\n        \n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}